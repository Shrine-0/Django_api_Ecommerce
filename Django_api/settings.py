"""
Django settings for Django_api project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from datetime import timedelta
import os
from pathlib import Path

import dotenv       
#for adding user credentials to the environment

dotenv.read_dotenv()  #reading the .env file

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = os.environ.get("SECRET_KEY") #getting the secret key from the environment

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = os.environ.get("DEBUG")=='True' #getting the debug value from the environment

ALLOWED_HOSTS = [
    'localhost',
    '192.168.1.67',
    '192.168.1.254',    
    
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework', # Django REST framework
    'courses.apps.CoursesConfig', # Our courses app
    'transaction.apps.TransactionConfig', # Our transaction app
    'Main.apps.MainConfig',#Our main app for index pages and templates
    'accounts.apps.AccountsConfig',#User accounts registered 
    'django_filters', # Django filters
    'storages',#cloud storages
    'rest_framework_simplejwt',#Authenticator
]
 
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Django_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Django_api.wsgi.application'



# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv("DATABASE_NAME"),
        'USER': os.getenv("DATABASE_USER"),
        'PASSWORD': os.getenv("DATABASE_PASSWORD"),
        'HOST': os.getenv("DATABASE_HOST"),
        'PORT': os.getenv("DATABASE_PORT"),
    }
}






REST_FRAMEWORK = {
    'EXCEPTION_HANDLER' : 'utils.custom_exception_handler.custom_exception_handler',
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

#! - --  -- - - - -- - - - - - - - -  AUTHENTICATION ------       -- -- - - -- - -- - -- - - - ! 
SIMPLE_JWT  = {
    "ACCESS_TOKEN_LIFETIME" : timedelta(hours=12),
    "REFRESH_TOKEN_LIFETIME" : timedelta(hours=12),
    "BLACKLIST_TOKEN" : True,
    "AUTH_HEADER_TYPES" : ("Bearer",),
    "AUTH_TOKEN_CLASSES" : ("rest_framework_simplejwt.tokens.AccessToken")

}

# ! - - -- - - -- - -- - -- - -- - - Password validation  - - -- - -- - -- - --  - -- - - -- - - -!
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


DEFAULT_FILE_STORAGE = 'Django_api.custom_storage.custom_azure.AzureMediaStorage'#setting the default file storage to azure media storage
STATICFILES_STORAGE = 'Django_api.custom_storage.custom_azure.AzureStaticStorage'#setting the static file storage to azure static storage
# # STORAGES = {
# #     "default": {"BACKEND": "Django_api.custom_storage.custom_azure.AzureMediaStorage"},
# #     "staticfiles": {"BACKEND": "Django_api.custom_storage.custom_azure.AzureStaticStorage"},
# # }

AZURE_CONNECTION_STRING = os.getenv("AZURE_CONNECTION_STRING")#getting the azure connection string from the environment
AZURE_ACCOUNT_NAME = os.getenv("AZURE_ACCOUNT_NAME")#getting the azure account name from the environment
AZURE_ACCOUNT_KEY = os.getenv("AZURE_ACCOUNT_KEY")#getting the azure account key from the environment
ACCOUNT_URL = f'{AZURE_ACCOUNT_NAME}.blob.core.windows.net'
ACCOUNT_SAS = os.getenv("AZURE_SAS_TOKEN")

MEDIA_LOCATION = "media"#
AZURE_CUSTOM_DOMAIN = f'{AZURE_ACCOUNT_NAME}.blob.core.windows.net'#setting the azure custom domain for the static and media files
STATIC_URL = f'https://{AZURE_CUSTOM_DOMAIN}/static/'#setting the static url for the static files
MEDIA_URL = f'https://{AZURE_CUSTOM_DOMAIN}/{MEDIA_LOCATION}/'#setting the media url for the media files
# # MEDIA_ROOT = os.path.join(BASE_DIR, "media")#setting the media root for the media files
# STATIC_URL ='/static/'